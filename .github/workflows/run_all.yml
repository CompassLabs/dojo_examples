name: test_examples

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: '*'
  workflow_dispatch:

env:
  RPC_URL: ${{ secrets.RPC_URL }}
  LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
  CHAIN: ethereum
  AWS_DEFAULT_REGION: eu-west-2
  AWS_SG_NAME: launch-wizard-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  test-all:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v2

      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Check if IP address is already allowed
        id: check-ip-allowed
        run: |
          existing_rules=$(aws ec2 describe-security-groups --group-names ${{ env.AWS_SG_NAME }} --query 'SecurityGroups[?contains(IpPermissions[].IpRanges[].CidrIp, `${{ steps.ip.outputs.ipv4 }}/32`)].GroupId' --output text)
          if [[ -n "${existing_rules}" ]]; then
            echo "::set-output name=ip-allowed::true"
          else
            echo "::set-output name=ip-allowed::false"
          fi

      - name: Add Github Actions IP to Security group
        run: |
          if [[ "${{ steps.check-ip-allowed.outputs.ip-allowed }}" != "true" ]]; then
            aws ec2 authorize-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 8545 --cidr ${{ steps.ip.outputs.ipv4 }}/32
          else
            echo "IP address is already allowed. Skipping step."
          fi

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install release-executable
        run: |
          pip install dojo-compass
          pip install pytest

      - name: Run tests
        run: |
          pip install pytest-cov
          pytest --cov=policies --cov=agents --cov-report xml tests/

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 8545 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        if: always()

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
